/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, vendor/assets/stylesheets,
 * or any plugin's vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS/SCSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require_tree .
 *= require_self
 */
 
html,
body {
  height: 100%;
  font-family: Meiryo;  /* 明朝体 */  
  /* html と body 要素はパディングやマージンを持てません。*/
}

/* フッターを下部へ押しやるための、コンテンツのラッパー */
#wrap {
  min-height: 100%;
  height: auto;
  /* フッターの高さ分だけ、ネガティブインデントを指定 */
  margin: 0 auto -60px;
  /* フッターの高さ分だけ、パディングを指定 */
  padding: 0 0 60px;
}

/* ここでフッターの高さを指定 */
#footer {
  height: 60px;
  background-color: #000;
  margin-top: 60px;
  padding: 10px;
}

.background-image {
  background-image: url("GraphPaper.jpg");
}
.background-color_white {
  background-color: #ffffff;
}
.align-middle {
  vertical-align: middle !important;
}
   
.top-down_padding {
  padding-top: 30px;
  padding-bottom: 30px;
}
   
.inline-block {
  display: inline-block;
}

.align-middle {
  vertical-align: middle !important;
}

hr {
  height: 1px;
  border: none;
  border-top: 2px #dcdcdc solid;
  margin: 50px 0;
}

ul {
  list-style: none;
}

/* bootstrapカスタム */
.breadcrumb > li + li:before {
  content: ">";
}

.preview-area {
  position: relative;
  width: 100%;
  min-height: 450px;
  overflow: hidden;  
}

.preview-area img, .preview-area canvas {
  position: absolute;
  left: 25%;
  top: 50%;
  width: 50%;
  height: auto;
  -webkit-transform: translate(-50%, -50%);
  -moz-transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);  
}

#liveview, #liveview2 {
  left: 75%;
}
/*
.canvas-wrapper {
  position: relative;
}
.canvas-wrapper canvas {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  margin: auto;
}
*/

/*-- チェックボック自体は非表示 --*/
.switch_set input {
  display: none;
}
/*-- ボタンの本体 --*/
.switch_set input+label {
  display: inline-block;
  position: relative;
  width: 100px;
  height: 30px;
  padding: 5px 5px 2px 5px;
  text-align: center; 
  line-height: 1.5; 
  border-radius: 40px; 
  background: #ccc; 
  cursor: pointer;
}
/*-- ボタンのラベル --*/
.switch_set input+label::before {
  display: inline-block;
  position: absolute;
  left: 0;
  top: 7px;
  content: attr(data-off-label);
  width: 100%;
  font-size: 1.4rem;
  color: #666;
}
/*-- チェックでボタンを変更 --*/
.switch_set input:checked+label { 
  background: orange;
}
.switch_set input:checked+label::before {
  content: attr(data-on-label); 
  color: #fff; 
}
/*-- チェックできないように --*/
.disabled label {
  pointer-events: none;
}
/*-- 枠線を強調 --*/
.table-bordered td
{
  border:1px solid #333 !important;
}