<div class="container">
  <%= form_for @damage, :html => { :onsubmit => "imagingAtCanvas()" } do |f| %>
    <%= f.hidden_field :sonsyo_id, :value => @sonsyo.id %>
    <%= f.hidden_field :survey_type, :value => @damage.survey_type %>
    
    <div class="row">
      <div class="col-xs-6">
        <%= f.file_field :image1, :accept => 'image/*', :capture => 'camera' %>
        <%= f.hidden_field :image1_cache %>
        <%= f.hidden_field :image2_cache %>
        <%= f.hidden_field :image3_cache %>
      </div>
      <div class="col-xs-6">
        <%= f.submit '登録', :class=>"btn btn-primary", :id=>"submit", data: { confirm: '登録してよろしいでしょうか？' } %>
      </div>
    </div>
    
    <div class="row photosArea">
      <div class="col-xs-6">
        <% unless @preview_damage.image1? %>
          <%= image_tag "bg_img.jpg", class:"previewImg" %>
        <% else %>
          <%= image_tag @preview_damage.image1, class:"previewImg" %>
        <% end %>      
      </div>
      <div class="col-xs-6" id="sonsyo-<%= @sonsyo.id %>">
        <canvas id="liveview"></canvas>
        <input type="hidden" name="canvas_data">
      </div>
    </div>
    
    <% if @sonsyo.room_name != "全景" %>
      <%= f.hidden_field :tekiyo %><!-- 選択した順番に適用を表記 -->
      <div class="form-group" style="margin-top: 20px;">
        <div class="switch_set">
          <%= f.check_box :genkyo, {}, "true", "false" %><%= f.label :genkyo, '現況' %>
          <%= f.check_box :sukima, {}, "true", "false" %><%= f.label :sukima, '隙間' %>
          <%= f.check_box :ware, {}, "true", "false" %><%= f.label :ware, '割れ' %>
          <%= f.check_box :kake, {}, "true", "false" %><%= f.label :kake, '欠け' %>
          <%= f.check_box :crack, {}, "true", "false" %><%= f.label :crack, 'クラック' %>
          <%= f.check_box :tile, {}, "true", "false" %><%= f.label :tile, 'タイル' %>
          <%= f.check_box :kire, {}, "true", "false" %><%= f.label :kire, '切れ' %>
          <%= f.check_box :uki, {}, "true", "false" %><%= f.label :uki, '浮き' %>
          <%= f.check_box :suhon, {}, "true", "false" %><%= f.label :suhon, '数本' %>
          <%= f.check_box :chirigire, {}, "true", "false" %><%= f.label :chirigire, 'チリ切れ' %>
          <%= f.check_box :cross, {}, "true", "false" %><%= f.label :cross, 'クロス' %>
          <%= f.check_box :meji, {}, "true", "false" %><%= f.label :meji, '目地' %>
          <%= f.check_box :tategu, {}, "true", "false" %><%= f.label :tategu, '建具' %>
          <%= f.check_box :tasu, {}, "true", "false" %><%= f.label :tasu, '多数' %>
          <%= f.check_box :kakusyo, {}, "true", "false" %><%= f.label :kakusyo, '各所' %>
        </div>
      </div>
    
      <div class="form-group" style="margin-top: 10px; padding: 10px;">
        矢印の向き：
        <label><input id="arrow_up" type="radio" checked="checked" name="direction">上</label>&nbsp;&nbsp;&nbsp;&nbsp;
        <label><input id="arrow_right" type="radio" name="direction">右</label>&nbsp;&nbsp;&nbsp;&nbsp;
        <label><input id="arrow_down" type="radio" name="direction">下</label>&nbsp;&nbsp;&nbsp;&nbsp;
        <label><input id="arrow_left" type="radio" name="direction">左</label>&nbsp;&nbsp;&nbsp;&nbsp;
        <label><input id="arrow_clean" type="radio" name="direction">クリア</label>
      </div>
  
      <div class="form-group">
        <p>面積：<%= f.text_field :width %>&nbsp;cm&nbsp;&nbsp;×&nbsp;&nbsp;<%= f.text_field :height %>&nbsp;cm</p>
        <p>幅：<%= f.text_field :wide %>&nbsp;mm</p>
      </div>
      
      <div class="form-group">
        長さ：&nbsp;<label><%= f.check_box :amimejyo, {}, "true", "false" %>網目状</label>&nbsp;&nbsp;
        <label><%= f.check_box :zencho, {}, "true", "false" %>全長</label>&nbsp;&nbsp;
        <label><%= f.check_box :zenshu, {}, "true", "false" %>全周</label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
        <%= f.text_field :length %>&nbsp;cm</span>
      </div>
      
      <div class="form-group">
        <%= f.label :comment, 'コメント(最大24文字)' %>
        <%= f.text_area :comment, :class=>"form-control", maxlength: 24 %>
      </div>
    <% end %>
  <% end %>
</div>

<style>
.photosArea {
  margin-top: 10px;
  margin-bottom: 10px;
}
.photosArea .previewImg {
  width: 100%;
}
</style>

<script>
// グローバル変数
var canvas = document.getElementById('liveview');
var ctx = canvas.getContext('2d');
var img = new Image();
var reader = new FileReader();

$('#damage_image1').on('change', function (e) {
  reader.onload = function (e) {
    img.src = e.target.result;

    img.onload = function() {
      // 画像サイズ取得
      var imgW = img.width;
      var imgH = img.height;
      // プレビュー画像の幅取得
      var previewImgW = $('.previewImg').width();
      // 拡縮率の計算
      var rate = previewImgW / imgW;
      
      // 画像ファイルの横幅に拡縮率を掛け、canvasのサイズにセット
      canvas.width = imgW * rate * 4;      // 高画質化のため、4倍に
      canvas.height = imgH * rate * 4;     // 高画質化のため、4倍に
      // 画像を canvas に表示
      ctx.drawImage(img, 0, 0, canvas.width, canvas.height);
      // スタイルを設定
      canvas.style.width = String(imgW * rate) + "px";
      canvas.style.height = String(imgH * rate) + "px";
    }
  }
  reader.readAsDataURL(e.target.files[0]);
});

$('#liveview').on('click', function(e){
  if(document.getElementById( "arrow_clean" ).checked) {
    // 初期化
    //ctx.clearRect(0, 0, canvas.width, canvas.height);
    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);
  } else {
    // 実際の画像サイズと描画領域の倍率を算出
    var rate = canvas.width / canvas.clientWidth;
    let offsetX = e.offsetX * rate; // =>要素左上からのx座標
    let offsetY = e.offsetY * rate; // =>要素左上からのy座標

    var w=canvas.width*0.05,h=w,w0=w*0.5,h0=h*0.25,x=offsetX,y=offsetY;
    // 矢印描画     
    ctx.setTransform(1,0,0,1,0,0);
    ctx.translate(x,y);
    ctx.beginPath();
    ctx.fillStyle = 'red';
    if ( document.getElementById( "arrow_up" ).checked ) {
    	// 上
      ctx.moveTo(-h0,w);
    	ctx.lineTo(-h0,w0);
      ctx.lineTo(-w0,w0);
      ctx.lineTo(0,0);
      ctx.lineTo(w0,w0);
      ctx.lineTo(h0,w0);
      ctx.lineTo(h0,w); 
      ctx.lineTo(-h0,w);
    } else if ( document.getElementById( "arrow_right" ).checked ) {
    	// 右
      ctx.moveTo(-w,-h0);    	
    	ctx.lineTo(-w0,-h0);
      ctx.lineTo(-w0,-w0);
      ctx.lineTo(0,0);
      ctx.lineTo(-w0,w0);
      ctx.lineTo(-w0,h0);
      ctx.lineTo(-w,h0);
      ctx.lineTo(-w,-h0);
    } else if ( document.getElementById( "arrow_down" ).checked ) {
    	// 下
      ctx.moveTo(-h0,-w);    	
    	ctx.lineTo(-h0,-w0);
      ctx.lineTo(-w0,-w0);
      ctx.lineTo(0,0);
      ctx.lineTo(w0,-w0);
      ctx.lineTo(h0,-w0);
      ctx.lineTo(h0,-w);
      ctx.lineTo(-h0,-w);    	
    } else if ( document.getElementById( "arrow_left" ).checked ) {
    	// 左
      ctx.moveTo(w,-h0);
    	ctx.lineTo(w0,-h0);
      ctx.lineTo(w0,-w0);
      ctx.lineTo(0,0);
      ctx.lineTo(w0,w0);
      ctx.lineTo(w0,h0);
      ctx.lineTo(w,h0);
      ctx.lineTo(w,-h0);
    }
    ctx.stroke();
    ctx.fill();
    ctx.closePath();
    ctx.setTransform(1,0,0,1,0,0);
    
    //console.log(ctx);
  }
});

function imagingAtCanvas() {
  // canvasの画像化
  var canvas_data = canvas.toDataURL('image/jpeg');
  $('input[name="canvas_data"]').val(canvas_data);
}

//************ 適用を選択順に表記 ************//
// 現況
$('#damage_genkyo').on('click', function(e){
  var original_val = $('#damage_tekiyo').val();
  
  if($(this).prop('checked') == true) {
    $('#damage_tekiyo').val(original_val + "現況 ");
  } else {
    $('#damage_tekiyo').val(original_val.replace("現況 ", ""));
  }
});
// 隙間
$('#damage_sukima').on('click', function(e){
  var original_val = $('#damage_tekiyo').val();
  
  if($(this).prop('checked') == true) {
    $('#damage_tekiyo').val(original_val + "隙間 ");
  } else {
    $('#damage_tekiyo').val(original_val.replace("隙間 ", ""));
  }
});
// 割れ
$('#damage_ware').on('click', function(e){
  var original_val = $('#damage_tekiyo').val();
  
  if($(this).prop('checked') == true) {
    $('#damage_tekiyo').val(original_val + "割れ ");
  } else {
    $('#damage_tekiyo').val(original_val.replace("割れ ", ""));
  }
});
// 欠け
$('#damage_kake').on('click', function(e){
  var original_val = $('#damage_tekiyo').val();
  
  if($(this).prop('checked') == true) {
    $('#damage_tekiyo').val(original_val + "欠け ");
  } else {
    $('#damage_tekiyo').val(original_val.replace("欠け ", ""));
  }
});
// クラック
$('#damage_crack').on('click', function(e){
  var original_val = $('#damage_tekiyo').val();
  
  if($(this).prop('checked') == true) {
    $('#damage_tekiyo').val(original_val + "クラック ");
  } else {
    $('#damage_tekiyo').val(original_val.replace("クラック ", ""));
  }
});
// タイル
$('#damage_tile').on('click', function(e){
  var original_val = $('#damage_tekiyo').val();
  
  if($(this).prop('checked') == true) {
    $('#damage_tekiyo').val(original_val + "タイル ");
  } else {
    $('#damage_tekiyo').val(original_val.replace("タイル ", ""));
  }
});
// 切れ
$('#damage_kire').on('click', function(e){
  var original_val = $('#damage_tekiyo').val();
  
  if($(this).prop('checked') == true) {
    $('#damage_tekiyo').val(original_val + "切れ ");
  } else {
    $('#damage_tekiyo').val(original_val.replace("切れ ", ""));
  }
});
// 浮き
$('#damage_uki').on('click', function(e){
  var original_val = $('#damage_tekiyo').val();
  
  if($(this).prop('checked') == true) {
    $('#damage_tekiyo').val(original_val + "浮き ");
  } else {
    $('#damage_tekiyo').val(original_val.replace("浮き ", ""));
  }
});
// 数本
$('#damage_suhon').on('click', function(e){
  var original_val = $('#damage_tekiyo').val();
  
  if($(this).prop('checked') == true) {
    $('#damage_tekiyo').val(original_val + "数本 ");
  } else {
    $('#damage_tekiyo').val(original_val.replace("数本 ", ""));
  }
});
// チリ切れ
$('#damage_chirigire').on('click', function(e){
  var original_val = $('#damage_tekiyo').val();
  
  if($(this).prop('checked') == true) {
    $('#damage_tekiyo').val(original_val + "チリ切れ ");
  } else {
    $('#damage_tekiyo').val(original_val.replace("チリ切れ ", ""));
  }
});
// クロス
$('#damage_cross').on('click', function(e){
  var original_val = $('#damage_tekiyo').val();
  
  if($(this).prop('checked') == true) {
    $('#damage_tekiyo').val(original_val + "クロス ");
  } else {
    $('#damage_tekiyo').val(original_val.replace("クロス ", ""));
  }
});
// 目地
$('#damage_meji').on('click', function(e){
  var original_val = $('#damage_tekiyo').val();
  
  if($(this).prop('checked') == true) {
    $('#damage_tekiyo').val(original_val + "目地 ");
  } else {
    $('#damage_tekiyo').val(original_val.replace("目地 ", ""));
  }
});
// 建具
$('#damage_tategu').on('click', function(e){
  var original_val = $('#damage_tekiyo').val();
  
  if($(this).prop('checked') == true) {
    $('#damage_tekiyo').val(original_val + "建具 ");
  } else {
    $('#damage_tekiyo').val(original_val.replace("建具 ", ""));
  }
});
// 多数
$('#damage_tasu').on('click', function(e){
  var original_val = $('#damage_tekiyo').val();
  
  if($(this).prop('checked') == true) {
    $('#damage_tekiyo').val(original_val + "多数 ");
  } else {
    $('#damage_tekiyo').val(original_val.replace("多数 ", ""));
  }
});
// 各所
$('#damage_kakusyo').on('click', function(e){
  var original_val = $('#damage_tekiyo').val();
  
  if($(this).prop('checked') == true) {
    $('#damage_tekiyo').val(original_val + "各所 ");
  } else {
    $('#damage_tekiyo').val(original_val.replace("各所 ", ""));
  }
});
</script>