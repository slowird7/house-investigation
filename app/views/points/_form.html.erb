<div class="row">
  <!-- <div class="col-md-6 col-md-offset-3"> -->
  <div style="margin: 10px;">
    
    <!-- カメラ映像が描画されます。 --
    <video id="video_area" style="background-color: #000" autoplay></video>
    <!-- 押下するとカメラ映像描画を開始します。 --
    <button id="start_btn">映像表示開始</button>
    <!-- 押下するとカメラ映像から静止画をキャプチャします。 --
    <button onclick="copyFrame()">静止画取得</button>
    <!-- 押下すると画像がダウンロードされます。 --
    <button id="dl">DL</button>
    <!-- キャプチャした静止画が描画されます。 --
    <canvas id="capture_image"></canvas>
    <img id="img">
    -->
    
    <%= form_for(@point) do |f| %>
      <p class="text-right">*必須</p>
      <%= f.hidden_field :survey_id, :value => @survey.id, :id=>"aaaaa" %>

      <table>
        <tr>
          <td>
            <%= image_tag "sampleImage.jpg", width: "50%" %>
          </td>
          <td>
            <%= f.file_field :image1, :accept => 'image/*', :capture => 'camera' %>
          </td>
        </tr>
      </table>      
      
      <div class="form-group">
        <%= f.label :genkyo, '現況' %><%= f.check_box :genkyo, {}, "true", "false" %>
        <%= f.label :sukima, '隙間' %><%= f.check_box :sukima, {}, "true", "false" %>
        <%= f.label :ware, '割れ' %><%= f.check_box :ware, {}, "true", "false" %>
        <%= f.label :kake, '欠け' %><%= f.check_box :kake, {}, "true", "false" %>
        <%= f.label :amimejyo, '網目状' %><%= f.check_box :amimejyo, {}, "true", "false" %>
        <%= f.label :zencho, '全長' %><%= f.check_box :zencho, {}, "true", "false" %>
        <%= f.label :sokuten, '測点' %><%= f.check_box :sokuten, {}, "true", "false" %>
        <%= f.label :crack, 'クラック' %><%= f.check_box :crack, {}, "true", "false" %>
        <%= f.label :tile, 'タイル' %><%= f.check_box :tile, {}, "true", "false" %>
        <%= f.label :kire, '切れ' %><%= f.check_box :kire, {}, "true", "false" %>
        <%= f.label :uki, '浮き' %><%= f.check_box :uki, {}, "true", "false" %>
        <%= f.label :suhon, '数本' %><%= f.check_box :suhon, {}, "true", "false" %>
        <%= f.label :zenshu, '全周' %><%= f.check_box :zenshu, {}, "true", "false" %>
        <%= f.label :suichokukeisya, '垂直傾斜' %><%= f.check_box :suichokukeisya, {}, "true", "false" %>
        <%= f.label :chirigire, 'チリ切れ' %><%= f.check_box :chirigire, {}, "true", "false" %>
        <%= f.label :cross, 'クロス' %><%= f.check_box :cross, {}, "true", "false" %>        
        <%= f.label :meji, '目地' %><%= f.check_box :meji, {}, "true", "false" %>
        <%= f.label :tategu, '建具' %><%= f.check_box :tategu, {}, "true", "false" %>
        <%= f.label :tasu, '多数' %><%= f.check_box :tasu, {}, "true", "false" %>
        <%= f.label :kakusyo, '各所' %><%= f.check_box :kakusyo, {}, "true", "false" %>
        <%= f.label :suiheikeisya, '水平傾斜' %><%= f.check_box :suiheikeisya, {}, "true", "false" %>                
      </div>
      
      <div class="form-group">
        <%= f.label :comment, 'コメント' %>
        <%= f.text_field :comment, :class=>"form-control" %>
      </div>
      
      <%= f.submit '登録', :class=>"btn btn-primary", :id=>"submit" %>
    <% end %>
  </div>
</div>

<script>
/*
  // getUserMedia が使えないときは、『getUserMedia()が利用できないブラウザです！』と言ってね。
  if (typeof navigator.mediaDevices.getUserMedia !== 'function') {
      const err = new Error('getUserMedia()が利用できないブラウザです！');
      alert(`${err.name} ${err.message}`);
      throw err;
  }
  
  // 操作する画面エレメント変数定義します。
  const $start = document.getElementById('start_btn');   // スタートボタン
  const $video = document.getElementById('video_area');  // 映像表示エリア
  
  // 「スタートボタン」を押下したら、getUserMedia を使って映像を「映像表示エリア」に表示してね。
  $start.addEventListener('click', () => {
      navigator.mediaDevices.getUserMedia({ video: true, audio: false })
      .then(stream => $video.srcObject = stream)
      .catch(err => alert(`${err.name} ${err.message}`));
  }, false);

  // 「静止画取得」ボタンが押されたら「<canvas id="capture_image">」に映像のコマ画像を表示します。
  function copyFrame() {
    var canvas_capture_image = document.getElementById('capture_image');
    var cci = canvas_capture_image.getContext('2d');
    var va = document.getElementById('video_area');

    canvas_capture_image.width  = va.videoWidth;
    canvas_capture_image.height = va.videoHeight;
    cci.drawImage(va, 0, 0);  // canvasに『「静止画取得」ボタン』押下時点の画像を描画。
  }

  $("#dl").on( "click", function(){
    var canvas_capture_image = document.getElementById('capture_image');
	  var jpeg = canvas_capture_image.toDataURL("image/jpeg")       // JPEG
	  
//	  var download = $("<a></a>").appendTo("body").css("display","none");
//    download.prop({"href" : jpeg, "download": "canvas.jpg" });
//	  download.get(0).click();
//	  download.remove();

//    console.log(jpeg);
//    console.log(document.getElementById( "image" ).value);
    console.log(document.getElementById( "aaaaa" ).value);
    document.getElementById( "img" ).src = jpeg;
  });
 */
</script>